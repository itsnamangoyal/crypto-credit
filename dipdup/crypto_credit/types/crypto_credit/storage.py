# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, Extra


class Asset(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class Listings(BaseModel):
    class Config:
        extra = Extra.forbid

    accepted: bool
    amount: str
    asset: Asset
    cancelled: bool
    creator: str
    duration: str
    interest: str


class Asset1(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class Loans(BaseModel):
    class Config:
        extra = Extra.forbid

    asset: Asset1
    duration: str
    interest: str
    lender: str
    loanee: str
    principal_amount: str
    repaid: Optional[bool]
    start_time: str


class Offers(BaseModel):
    class Config:
        extra = Extra.forbid

    accepted: bool
    amount: str
    cancelled: bool
    creator: str
    duration: str
    interest: str
    listing: str


class CryptoCreditStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    listings: Dict[str, Listings]
    listings_count: str
    loans: Dict[str, Loans]
    loans_count: str
    offers: Dict[str, Offers]
    offers_count: str
