# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra


class Key(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    nat: str


class LedgerItem(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key
    value: str


class Key1(BaseModel):
    class Config:
        extra = Extra.forbid

    owner: str
    operator: str
    token_id: str


class Operator(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key1
    value: Dict[str, Any]


class TokenAttributes(BaseModel):
    class Config:
        extra = Extra.forbid

    category: str
    ints: Dict[str, str]
    on_sale: bool
    owner: str
    sets: Dict[str, List[str]]
    strings: Dict[str, str]
    token_id: str
    uid: str


class TokenMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    token_id: str
    token_info: Dict[str, str]


class TezotopiaNftRegisteryStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    administrator: str
    all_tokens: str
    ledger: List[LedgerItem]
    manager: str
    marketplace: str
    metadata: Dict[str, str]
    minter: str
    operators: List[Operator]
    paused: bool
    pending_admin: Optional[str]
    token_attributes: Dict[str, TokenAttributes]
    token_metadata: Dict[str, TokenMetadata]
    uids: Dict[str, str]
